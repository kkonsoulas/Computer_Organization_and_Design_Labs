$date
	Thu Dec  2 19:44:21 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module cpu_tb $end
$var wire 1 ! zero $end
$var wire 32 " rdB [31:0] $end
$var wire 32 # rdA [31:0] $end
$var wire 32 $ ALUOut [31:0] $end
$var reg 1 % clock $end
$var reg 4 & op [3:0] $end
$var reg 5 ' raA [4:0] $end
$var reg 5 ( raB [4:0] $end
$var reg 1 ) reset $end
$var reg 5 * wa [4:0] $end
$var reg 1 + wen $end
$var integer 32 , i [31:0] $end
$var integer 32 - j [31:0] $end
$scope module ALUInst $end
$var wire 4 . op [3:0] $end
$var wire 1 ! zero $end
$var wire 32 / out [31:0] $end
$var wire 32 0 inB [31:0] $end
$var wire 32 1 inA [31:0] $end
$upscope $end
$scope module regs $end
$var wire 1 % clock $end
$var wire 5 2 raA [4:0] $end
$var wire 5 3 raB [4:0] $end
$var wire 32 4 rdA [31:0] $end
$var wire 32 5 rdB [31:0] $end
$var wire 1 ) reset $end
$var wire 5 6 wa [4:0] $end
$var wire 32 7 wd [31:0] $end
$var wire 1 + wen $end
$var integer 32 8 i [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 9 \data[0] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 : \data[1] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 ; \data[2] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 < \data[3] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 = \data[4] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 > \data[5] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 ? \data[6] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 @ \data[7] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 A \data[8] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 B \data[9] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 C \data[10] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 D \data[11] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 E \data[12] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 F \data[13] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 G \data[14] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 H \data[15] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 I \data[16] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 J \data[17] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 K \data[18] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 L \data[19] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 M \data[20] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 N \data[21] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 O \data[22] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 P \data[23] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 Q \data[24] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 R \data[25] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 S \data[26] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 T \data[27] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 U \data[28] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 V \data[29] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 W \data[30] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module regs $end
$var reg 32 X \data[31] [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b100000 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
b100000 -
bx ,
x+
bx *
0)
bx (
bx '
bx &
1%
bx $
bx #
bx "
x!
$end
#5000
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b100000 8
0%
#10000
1%
#15000
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b100000 8
0%
#20000
1%
#25000
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b100000 8
0%
#30000
1%
#35000
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b100000 8
0%
#40000
1%
b11111 X
b11110 W
b11101 V
b11100 U
b11011 T
b11010 S
b11001 R
b11000 Q
b10111 P
b10110 O
b10101 N
b10100 M
b10011 L
b10010 K
b10001 J
b10000 I
b1111 H
b1110 G
b1101 F
b1100 E
b1011 D
b1010 C
b1001 B
b1000 A
b111 @
b110 ?
b101 >
b100 =
b11 <
b10 ;
b1 :
b0 9
b100000 ,
1)
#45000
0%
#50000
1%
b0 ,
1+
b10 &
b10 .
#55000
0%
#60000
0!
b11111 $
b11111 /
b11111 7
1%
b1 ,
b0 *
b0 6
b11111 "
b11111 0
b11111 5
b11111 (
b11111 3
b0 #
b0 1
b0 4
b0 '
b0 2
#65000
0%
#70000
1%
b10 ,
b1 *
b1 6
b11110 "
b11110 0
b11110 5
b11110 (
b11110 3
b1 #
b1 1
b1 4
b1 '
b1 2
#75000
b111101 $
b111101 /
b111101 7
b11111 :
b11111 #
b11111 1
b11111 4
0%
#80000
b11111 $
b11111 /
b11111 7
1%
b11 ,
b10 *
b10 6
b11101 "
b11101 0
b11101 5
b11101 (
b11101 3
b10 #
b10 1
b10 4
b10 '
b10 2
#85000
b111100 $
b111100 /
b111100 7
b11111 ;
b11111 #
b11111 1
b11111 4
0%
#90000
b11111 $
b11111 /
b11111 7
1%
b100 ,
b11 *
b11 6
b11100 "
b11100 0
b11100 5
b11100 (
b11100 3
b11 #
b11 1
b11 4
b11 '
b11 2
#95000
b111011 $
b111011 /
b111011 7
b11111 <
b11111 #
b11111 1
b11111 4
0%
#100000
b11111 $
b11111 /
b11111 7
1%
b101 ,
b100 *
b100 6
b11011 "
b11011 0
b11011 5
b11011 (
b11011 3
b100 #
b100 1
b100 4
b100 '
b100 2
#105000
b111010 $
b111010 /
b111010 7
b11111 =
b11111 #
b11111 1
b11111 4
0%
#110000
b11111 $
b11111 /
b11111 7
1%
b110 ,
b101 *
b101 6
b11010 "
b11010 0
b11010 5
b11010 (
b11010 3
b101 #
b101 1
b101 4
b101 '
b101 2
#115000
b111001 $
b111001 /
b111001 7
b11111 >
b11111 #
b11111 1
b11111 4
0%
#120000
b11111 $
b11111 /
b11111 7
1%
b111 ,
b110 *
b110 6
b11001 "
b11001 0
b11001 5
b11001 (
b11001 3
b110 #
b110 1
b110 4
b110 '
b110 2
#125000
b111000 $
b111000 /
b111000 7
b11111 ?
b11111 #
b11111 1
b11111 4
0%
#130000
b11111 $
b11111 /
b11111 7
1%
b1000 ,
b111 *
b111 6
b11000 "
b11000 0
b11000 5
b11000 (
b11000 3
b111 #
b111 1
b111 4
b111 '
b111 2
#135000
b110111 $
b110111 /
b110111 7
b11111 @
b11111 #
b11111 1
b11111 4
0%
#140000
b11111 $
b11111 /
b11111 7
1%
b1001 ,
b1000 *
b1000 6
b10111 "
b10111 0
b10111 5
b10111 (
b10111 3
b1000 #
b1000 1
b1000 4
b1000 '
b1000 2
#145000
b110110 $
b110110 /
b110110 7
b11111 A
b11111 #
b11111 1
b11111 4
0%
#150000
b11111 $
b11111 /
b11111 7
1%
b1010 ,
b1001 *
b1001 6
b10110 "
b10110 0
b10110 5
b10110 (
b10110 3
b1001 #
b1001 1
b1001 4
b1001 '
b1001 2
#155000
b110101 $
b110101 /
b110101 7
b11111 B
b11111 #
b11111 1
b11111 4
0%
#160000
b11111 $
b11111 /
b11111 7
1%
b1011 ,
b1010 *
b1010 6
b10101 "
b10101 0
b10101 5
b10101 (
b10101 3
b1010 #
b1010 1
b1010 4
b1010 '
b1010 2
#165000
b110100 $
b110100 /
b110100 7
b11111 C
b11111 #
b11111 1
b11111 4
0%
#170000
b11111 $
b11111 /
b11111 7
1%
b1100 ,
b1011 *
b1011 6
b10100 "
b10100 0
b10100 5
b10100 (
b10100 3
b1011 #
b1011 1
b1011 4
b1011 '
b1011 2
#175000
b110011 $
b110011 /
b110011 7
b11111 D
b11111 #
b11111 1
b11111 4
0%
#180000
b11111 $
b11111 /
b11111 7
1%
b1101 ,
b1100 *
b1100 6
b10011 "
b10011 0
b10011 5
b10011 (
b10011 3
b1100 #
b1100 1
b1100 4
b1100 '
b1100 2
#185000
b110010 $
b110010 /
b110010 7
b11111 E
b11111 #
b11111 1
b11111 4
0%
#190000
b11111 $
b11111 /
b11111 7
1%
b1110 ,
b1101 *
b1101 6
b10010 "
b10010 0
b10010 5
b10010 (
b10010 3
b1101 #
b1101 1
b1101 4
b1101 '
b1101 2
#195000
b110001 $
b110001 /
b110001 7
b11111 F
b11111 #
b11111 1
b11111 4
0%
#200000
b11111 $
b11111 /
b11111 7
1%
b1111 ,
b1110 *
b1110 6
b10001 "
b10001 0
b10001 5
b10001 (
b10001 3
b1110 #
b1110 1
b1110 4
b1110 '
b1110 2
#205000
b110000 $
b110000 /
b110000 7
b11111 G
b11111 #
b11111 1
b11111 4
0%
#210000
b11111 $
b11111 /
b11111 7
1%
b10000 ,
b1111 *
b1111 6
b10000 "
b10000 0
b10000 5
b10000 (
b10000 3
b1111 #
b1111 1
b1111 4
b1111 '
b1111 2
#215000
b101111 $
b101111 /
b101111 7
b11111 H
b11111 #
b11111 1
b11111 4
0%
#220000
1%
b10001 ,
b10000 *
b10000 6
b11111 "
b11111 0
b11111 5
b1111 (
b1111 3
b10000 #
b10000 1
b10000 4
b10000 '
b10000 2
#225000
b1001110 $
b1001110 /
b1001110 7
b101111 I
b101111 #
b101111 1
b101111 4
0%
#230000
b110000 $
b110000 /
b110000 7
1%
b10010 ,
b10001 *
b10001 6
b1110 (
b1110 3
b10001 #
b10001 1
b10001 4
b10001 '
b10001 2
#235000
b1001111 $
b1001111 /
b1001111 7
b110000 J
b110000 #
b110000 1
b110000 4
0%
#240000
b110001 $
b110001 /
b110001 7
1%
b10011 ,
b10010 *
b10010 6
b1101 (
b1101 3
b10010 #
b10010 1
b10010 4
b10010 '
b10010 2
#245000
b1010000 $
b1010000 /
b1010000 7
b110001 K
b110001 #
b110001 1
b110001 4
0%
#250000
b110010 $
b110010 /
b110010 7
1%
b10100 ,
b10011 *
b10011 6
b1100 (
b1100 3
b10011 #
b10011 1
b10011 4
b10011 '
b10011 2
#255000
b1010001 $
b1010001 /
b1010001 7
b110010 L
b110010 #
b110010 1
b110010 4
0%
#260000
b110011 $
b110011 /
b110011 7
1%
b10101 ,
b10100 *
b10100 6
b1011 (
b1011 3
b10100 #
b10100 1
b10100 4
b10100 '
b10100 2
#265000
b1010010 $
b1010010 /
b1010010 7
b110011 M
b110011 #
b110011 1
b110011 4
0%
#270000
b110100 $
b110100 /
b110100 7
1%
b10110 ,
b10101 *
b10101 6
b1010 (
b1010 3
b10101 #
b10101 1
b10101 4
b10101 '
b10101 2
#275000
b1010011 $
b1010011 /
b1010011 7
b110100 N
b110100 #
b110100 1
b110100 4
0%
#280000
b110101 $
b110101 /
b110101 7
1%
b10111 ,
b10110 *
b10110 6
b1001 (
b1001 3
b10110 #
b10110 1
b10110 4
b10110 '
b10110 2
#285000
b1010100 $
b1010100 /
b1010100 7
b110101 O
b110101 #
b110101 1
b110101 4
0%
#290000
b110110 $
b110110 /
b110110 7
1%
b11000 ,
b10111 *
b10111 6
b1000 (
b1000 3
b10111 #
b10111 1
b10111 4
b10111 '
b10111 2
#295000
b1010101 $
b1010101 /
b1010101 7
b110110 P
b110110 #
b110110 1
b110110 4
0%
#300000
b110111 $
b110111 /
b110111 7
1%
b11001 ,
b11000 *
b11000 6
b111 (
b111 3
b11000 #
b11000 1
b11000 4
b11000 '
b11000 2
#305000
b1010110 $
b1010110 /
b1010110 7
b110111 Q
b110111 #
b110111 1
b110111 4
0%
#310000
b111000 $
b111000 /
b111000 7
1%
b11010 ,
b11001 *
b11001 6
b110 (
b110 3
b11001 #
b11001 1
b11001 4
b11001 '
b11001 2
#315000
b1010111 $
b1010111 /
b1010111 7
b111000 R
b111000 #
b111000 1
b111000 4
0%
#320000
b111001 $
b111001 /
b111001 7
1%
b11011 ,
b11010 *
b11010 6
b101 (
b101 3
b11010 #
b11010 1
b11010 4
b11010 '
b11010 2
#325000
b1011000 $
b1011000 /
b1011000 7
b111001 S
b111001 #
b111001 1
b111001 4
0%
#330000
b111010 $
b111010 /
b111010 7
1%
b11100 ,
b11011 *
b11011 6
b100 (
b100 3
b11011 #
b11011 1
b11011 4
b11011 '
b11011 2
#335000
b1011001 $
b1011001 /
b1011001 7
b111010 T
b111010 #
b111010 1
b111010 4
0%
#340000
b111011 $
b111011 /
b111011 7
1%
b11101 ,
b11100 *
b11100 6
b11 (
b11 3
b11100 #
b11100 1
b11100 4
b11100 '
b11100 2
#345000
b1011010 $
b1011010 /
b1011010 7
b111011 U
b111011 #
b111011 1
b111011 4
0%
#350000
b111100 $
b111100 /
b111100 7
1%
b11110 ,
b11101 *
b11101 6
b10 (
b10 3
b11101 #
b11101 1
b11101 4
b11101 '
b11101 2
#355000
b1011011 $
b1011011 /
b1011011 7
b111100 V
b111100 #
b111100 1
b111100 4
0%
#360000
b111101 $
b111101 /
b111101 7
1%
b11111 ,
b11110 *
b11110 6
b1 (
b1 3
b11110 #
b11110 1
b11110 4
b11110 '
b11110 2
#365000
b1011100 $
b1011100 /
b1011100 7
b111101 W
b111101 #
b111101 1
b111101 4
0%
#370000
b11111 $
b11111 /
b11111 7
1%
b100000 ,
b11111 *
b11111 6
b0 "
b0 0
b0 5
b0 (
b0 3
b11111 #
b11111 1
b11111 4
b11111 '
b11111 2
#375000
b11111 X
0%
#380000
0!
b11111 $
b11111 /
b11111 7
1%
b1000 *
b1000 6
b11111 "
b11111 0
b11111 5
b1001 (
b1001 3
b1000 '
b1000 2
b0 &
b0 .
#385000
b11111 A
0%
#390000
1%
b1 *
b1 6
b10 (
b10 3
b1 '
b1 2
b1 &
b1 .
#395000
b11111 :
0%
#400000
b111110 $
b111110 /
b111110 7
1%
b110 *
b110 6
b100 (
b100 3
b10 '
b10 2
0+
b10 &
b10 .
#405000
0%
#410000
b11111111111111111111111111101001 $
b11111111111111111111111111101001 /
b11111111111111111111111111101001 7
1%
b0 *
b0 6
b110110 "
b110110 0
b110110 5
b10111 (
b10111 3
b11 '
b11 2
1+
b110 &
b110 .
#415000
0%
#420000
x!
bx $
bx /
bx 7
1%
b11 *
b11 6
b11111 "
b11111 0
b11111 5
b1000 (
b1000 3
b1110 &
b1110 .
#425000
bx <
bx #
bx 1
bx 4
0%
#430000
1%
#435000
bx <
0%
#440000
1%
#445000
bx <
0%
#450000
1%
#455000
bx <
0%
#460000
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 "
b0 0
b0 5
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 #
b0 1
b0 4
b0 ;
b0 :
b0 9
b100000 8
1%
0)
0+
#465000
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b100000 8
0%
#470000
1%
1)
#475000
0%
#480000
1%
b100 ;
b10 :
#485000
0%
#490000
0!
b1 $
b1 /
b1 7
1%
1+
b100 "
b100 0
b100 5
b10 (
b10 3
b10 #
b10 1
b10 4
b1 '
b1 2
b111 &
b111 .
#495000
b1 <
0%
#500000
b11111111111111111111111111111001 $
b11111111111111111111111111111001 /
b11111111111111111111111111111001 7
1%
b100 *
b100 6
b1100 &
b1100 .
#505000
b11111111111111111111111111111001 =
0%
#510000
1%
#515000
b11111111111111111111111111111001 =
0%
#520000
1%
