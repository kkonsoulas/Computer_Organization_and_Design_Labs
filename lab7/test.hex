@0 01104020
@1 ad5f0008
@2 8d4f0008
@3 01244822
@4 01ed7025
@5 02129824
@6 8d590008
@7 ad5c0008
@8 000d8040
@9 8d420008
@A 1050000b
@B 21ad0001
@C 004d2024
@D 008b2025
@E 00824820
@F 0089e82a
@10 8d430008
@11 206cfc04
@12 018c6020
@13 0002a300
@14 03b4b004
@15 08100026
@16 01ad6820
@17 01094026
@18 216c0002
@19 01ac7025

@15 08000006
@17 01094026

@17 01094026
@18 216c0002
@19 01ac7025

/*always @(*)
   begin
	if (raA == wa && wen == 1'b1)
	    rdA <= wd;
	else
	    rdA <= data[raA];
  end
  always @(*)
   begin
	if (raB == wa && wen == 1'b1)
	    rdB <= wd;
	else
		rdB <= data[raB];
  end
  
  
  
  always @(posedge clock)
   begin
    if (reset == 1'b1 && wen == 1'b1 && wa != 5'b0)
        data[wa] =  wd;
   end*/
